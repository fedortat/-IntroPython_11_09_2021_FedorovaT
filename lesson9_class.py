class DataUser:  # класс
    # # просто атрибуты класса - плохая практика
    # name = "" # атрибут класса
    # ip = "0.0.0.0" # атрибут класса
    # user_time = 0.0 # атрибут класса

    # инициализируем создание экзмепляра класса
    def __init__(self, name, ip, user_time):  # всегда первым параметром должен быть self
        # теперь нам нужно куда-то упаковать эти данные (name, ip и т.д)
        self.name = name
        self.ip = ip
        self.user_time = user_time

    def __str__(self):  # метод реализует превращение в строку, можно использовать для полного описания
        return f"name: {self.name}, ip: {self.ip}, user_time: {self.user_time}"  # возвращаться должна всегда строка, иначе будет ошибка

    def __repr__(self):  # реализует превращение в строку, можно использовать для котроткого представления
        return f"{self.name} - {self.user_time}"

    # если repr будет, а str не будет, то будет применяться repr вместо str

    # в рамках класса можно, кроме зарезервированных методов, создавать и собственные методы - функции:
    # например, нам нужно увеличить user_time на какую-то величину, которую передадим через add_time
    def increase_user_time(self, add_time):
        self.user_time += add_time
